// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// --------- //
// RP2040QTR //
// --------- //

#define RP2040QTR_wrap_target 16
#define RP2040QTR_wrap 16

static const uint16_t RP2040QTR_program_instructions[] = {
    0x6087, //  0: out    pindirs, 7                 
    0x0081, //  1: jmp    y--, 1                     
    0x604a, //  2: out    y, 10                      
    0xa0e3, //  3: mov    osr, null                  
    0x6087, //  4: out    pindirs, 7                 
    0x4007, //  5: in     pins, 7                    
    0xa0e2, //  6: mov    osr, y                     
    0xa046, //  7: mov    y, isr                     
    0x00ab, //  8: jmp    x != y, 11                 
    0xa0c3, //  9: mov    isr, null                  
    0x000d, // 10: jmp    13                         
    0xa022, // 11: mov    x, y                       
    0x40f0, // 12: in     osr, 16                    
    0xa047, // 13: mov    y, osr                     
    0x0085, // 14: jmp    y--, 5                     
    0x4040, // 15: in     y, 32                      
            //     .wrap_target
    0xa042, // 16: nop                               
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program RP2040QTR_program = {
    .instructions = RP2040QTR_program_instructions,
    .length = 17,
    .origin = -1,
};

static inline pio_sm_config RP2040QTR_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + RP2040QTR_wrap_target, offset + RP2040QTR_wrap);
    return c;
}
#endif


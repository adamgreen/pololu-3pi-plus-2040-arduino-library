// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// -------------- //
// RP2040Encoders //
// -------------- //

#define RP2040Encoders_wrap_target 15
#define RP2040Encoders_wrap 26

#define RP2040Encoders_offset_start 15u

static const uint16_t RP2040Encoders_program_instructions[] = {
    0x000f, //  0: jmp    15                         
    0x0014, //  1: jmp    20                         
    0x0016, //  2: jmp    22                         
    0x000f, //  3: jmp    15                         
    0x0016, //  4: jmp    22                         
    0x000f, //  5: jmp    15                         
    0x000f, //  6: jmp    15                         
    0x0014, //  7: jmp    20                         
    0x0014, //  8: jmp    20                         
    0x000f, //  9: jmp    15                         
    0x000f, // 10: jmp    15                         
    0x0016, // 11: jmp    22                         
    0x000f, // 12: jmp    15                         
    0x0016, // 13: jmp    22                         
    0x0014, // 14: jmp    20                         
            //     .wrap_target
    0xa0c3, // 15: mov    isr, null                  
    0x4042, // 16: in     y, 2                       
    0xa040, // 17: mov    y, pins                    
    0x4042, // 18: in     y, 2                       
    0xa0a6, // 19: mov    pc, isr                    
    0x0059, // 20: jmp    x--, 25                    
    0x0019, // 21: jmp    25                         
    0xa029, // 22: mov    x, !x                      
    0x0058, // 23: jmp    x--, 24                    
    0xa029, // 24: mov    x, !x                      
    0xa0c1, // 25: mov    isr, x                     
    0x8000, // 26: push   noblock                    
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program RP2040Encoders_program = {
    .instructions = RP2040Encoders_program_instructions,
    .length = 27,
    .origin = 0,
};

static inline pio_sm_config RP2040Encoders_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + RP2040Encoders_wrap_target, offset + RP2040Encoders_wrap);
    return c;
}
#endif

